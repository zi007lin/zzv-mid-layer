Let me help address Yuan's comment about adding descriptions to outputs:

### Response to Yuan, Jinglong [TECH NE]
> I have added a short description for all my output as I have get into issues with pipeline policy failing with missing discriptions

Yes, we should add descriptions to all outputs. Here's the fix:

````terraform
output "view_name" {
  description = "The name of the created log view"
  value       = module.log_view.name
}

output "view_id" {
  description = "The full resource ID of the log view"
  value       = module.log_view.id
}

output "view_filter" {
  description = "The filter expression applied to the log view"
  value       = module.log_view.filter
}

output "view_bucket" {
  description = "The full path of the parent bucket containing the view"
  value       = module.log_view.bucket
}
````

This change:
1. Adds clear descriptions for each output
2. Follows Terraform best practices for documentation
3. Helps meet pipeline policy requirements
4. Makes the module more maintainable
5. Improves user experience by clearly documenting outputs

The descriptions align with the output documentation in the module's README.md and provide clear information about what each output contains.