Let me provide a focused update for just the README.md file:

### Update Module Documentation

Only the README.md needs to be updated to reflect the variable name change:

````markdown
# 📘 Terraform Module: GCP Log View

// ...existing code...

## 📚 Inputs

| Name | Description | Type | Required | Default |
|------|-------------|------|----------|---------|
| `name` | Name of the log view | `string` | ✅ | - |
| `bucket_id` | ID of the log bucket (must contain only lowercase letters, numbers, hyphens, and underscores) | `string` | ✅ | - |
| `filter` | Filter expression for the log view | `string` | ✅ | - |
| `project` | GCP project ID | `string` | ✅ | - |
| `region` | Region for the log view | `string` | ✅ | - |
| `description` | Description of the log view | `string` | ❌ | `null` |

## 🛠️ Usage

```hcl
module "log_view" {
  source      = "github.com/your-org/terraform-google-log-view//modules/log_view"
  
  name        = "app-errors-view"
  bucket_id   = "my-logging-bucket"    # Updated parameter name
  filter      = "severity >= ERROR"
  project     = "my-project"
  region      = "us-central1"
  description = "View for application errors"
}
```
// ...existing code...
````

The changes:
1. Update variable name in inputs table
2. Add validation information for `bucket_id`
3. Update example code block
4. Keep test file unchanged
5. Maintain all other README sections as is